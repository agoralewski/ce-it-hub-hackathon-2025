services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  web:
    build: .
    # Use Django development server initially for debugging
    command: ["uv", "run", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ENGINE=django.db.backends.postgresql
      - NETWORK_HOST=192.168.172.75  # Explicitly setting detected network IP
    # No need to publish port 8000 as Nginx will handle external connections
    # ports:
    #   - "8000:8000"

  nginx:
    build:
      context: ./nginx
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./static:/app/static
      - ./media:/app/media
    ports:
      - "80:80"
    depends_on:
      - web

volumes:
  postgres_data:

# Load environment variables from .env file
# Docker Compose automatically reads from .env in the same directory
