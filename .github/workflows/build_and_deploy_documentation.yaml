name: Build and Deploy Documentation

# build the documentation whenever there are new commits on main
on:
  push:
    branches:
      - main
      - publish-docs

# security: restrict permissions for CI jobs.
permissions:
  contents: read

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
 
      - name: Set up Python
        run: uv python install
 
      - name: Install deps
        run: uv sync
 
      # ADJUST THIS: build your documentation into docs/.
      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
      - run: |
          uv run mkdocs build -f ./docs/en/mkdocs.yml
          uv run mkdocs build -f ./docs/pl/mkdocs.yml
          echo '<meta http-equiv="refresh" content="0; url=https://agoralewski.github.io/ce-it-hub-hackathon-2025/en/">' > ./docs/generated/index.html

      - uses: actions/upload-pages-artifact@v3
        with:
          name: html-docs
          path: ./docs/generated
        continue-on-error: true

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: html-docs
        continue-on-error: true
