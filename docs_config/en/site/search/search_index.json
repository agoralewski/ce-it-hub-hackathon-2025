{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to the documentation for the Warehouse Management System! Here you'll find everything you need to get started, use, and maintain the application.</p>"},{"location":"#app-screenshot","title":"\ud83d\udcf8 App Screenshot","text":""},{"location":"#documentation-sections","title":"\ud83d\udcda Documentation Sections","text":"<ul> <li>Deployment Guide</li> <li>Maintenance</li> <li>Features</li> <li>User Guide</li> </ul>"},{"location":"deploy/","title":"Deployment Guide","text":"<p>This guide explains how to deploy the Warehouse Management application using Docker and Nginx for production environments.</p>"},{"location":"deploy/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker and Docker Compose installed</li> <li>Git (to clone the repository)</li> <li>Port 80 available on the host machine</li> </ul>"},{"location":"deploy/#deployment-steps","title":"Deployment Steps","text":""},{"location":"deploy/#1-clone-the-repository","title":"1. Clone the repository","text":"<pre><code>git clone https://github.com/yourusername/ce-it-hub-hackathon-2025.git ksp\ncd ksp\n</code></pre>"},{"location":"deploy/#2a-use-uv-to-create-a-virtual-environment-and-install-dependencies","title":"2.A Use uv to create a virtual environment and install dependencies","text":"<p>Install uv</p> <pre><code>uv sync\n</code></pre>"},{"location":"deploy/#3-configure-environment-variables","title":"3. Configure environment variables","text":"<p>Copy the example environment file and update it with your settings:</p> <pre><code>cp .env.example .env\n</code></pre> <p>Edit the <code>.env</code> file with your specific configuration: - Set a secure <code>SECRET_KEY</code> - Set all listed usernames and passwords in the .env file - Set the correct network ip by running: <code>./scripts/set_network_ip.sh</code> from the <code>ksp</code> directory.</p> <p>IMPORTANT: The <code>NETWORK_HOST</code> variable is critical for QR code functionality. If not set correctly, QR codes will not point to your server's IP address or domain name, making them inaccessible on mobile devices.</p>"},{"location":"deploy/#4-build-the-application","title":"4. Build the application","text":"<ul> <li>Build the application by running: <code>docker compose up</code></li> </ul> <p>This will: - Build the Docker images for your Django application and Nginx - Start the PostgreSQL database - Start the Django application with Gunicorn - Start the Nginx web server</p>"},{"location":"deploy/#5-run-databse-migrations-and-superuser-creation","title":"5. Run databse migrations and superuser creation","text":"<p>Follow the guided script to create the superuser and run django migrations.</p> <pre><code>./scripts/manage_django.sh\n</code></pre>"},{"location":"deploy/#6-access-the-application","title":"6. Access the Application","text":"<p>Your application will now be available at: - <code>http://localhost/warehouse/</code> (if accessing from the same machine) - <code>http://your-ip-address/warehouse</code> (if accessing from other devices on the network). Ensure you are using <code>http</code> and not <code>https</code>. Since there is no domain or certificate for this application, https cannot be used.</p> <p>Check your IP address with:</p> <pre><code># On macOS\nipconfig getifaddr en0\n\n# On Linux\nhostname -I | awk '{print $1}'\n</code></pre>"},{"location":"deploy/#optional-run-the-static-files-rebuild-script","title":"(Optional). Run the Static Files Rebuild Script","text":"<p>This step is applicable only if you encounter issues with static files not loading correctly.</p> <p>Symptoms: - CSS styles are missing - JavaScript functionality is broken - Images don't appear - Browser console shows 404 errors for static files</p> <p>Solutions: 1. Hard refresh your browser (Ctrl+F5 or Cmd+Shift+R) 2. Run the script <code>sudo ./scripts/rebuild_static.sh</code> 3. (if 2 didn't fix) Clear browser cache</p> <p>This script will: - Stop all containers - Clean the staticfiles directory - Create required directories with correct permissions - Rebuild and restart containers - Run the collectstatic command</p>"},{"location":"deploy/#troubleshooting","title":"Troubleshooting","text":"<ol> <li> <p>Ensure you did not skip any steps, especially running the required scripts (<code>set_network_ip.sh</code> and <code>manage.django.sh</code>)</p> </li> <li> <p>Check if all containers are running:    <code>docker compose ps</code></p> </li> <li> <p>Check the logs for errors:    <code>docker compose logs</code></p> </li> <li> <p>Verify that the Nginx configuration is correct:    <code>docker compose exec nginx nginx -t</code></p> </li> <li> <p>Ensure your firewall allows traffic on port 80.</p> </li> </ol>"},{"location":"features/","title":"Features","text":""},{"location":"features/#system-architecture","title":"System Architecture","text":"<p>The system consists of the following components:</p> <ol> <li>Django Web Application - The main backend application serving dynamic content via Gunicorn</li> <li>PostgreSQL Database - Stores all application data</li> <li>Nginx - Reverse proxy that handles HTTP requests, static file serving, and routing</li> </ol>"},{"location":"features/#key-features","title":"Key features","text":"<ul> <li>User authentication with admin and standard user roles</li> <li>Warehouse organization with rooms, racks, and shelves</li> <li>Item tracking with categories, expiration dates, and location</li> <li>Mobile-responsive interface for easy inventory management</li> <li>QR code generation for quick access to shelf information</li> <li>Excel export functionality for inventory reports</li> <li>Email notifications for expiring items and password reset</li> <li>Multiple language support (Polish and English)</li> </ul>"},{"location":"features/#networking-setup","title":"Networking Setup","text":"<p>The application is, as requested, only available on local network, so no https, domains, or certificates are issued for it. Mobile devices connecting to the application need to be connected to the same network as the host.</p>"},{"location":"features/#user-types","title":"User Types","text":"<ol> <li> <p>Warehouse Administrator:    -Full access to all application features    -Can manage warehouse structure (rooms, racks, shelves)    -Can manage item categories    -Can export to excel    -Can view history of item movements (removals, additions)</p> </li> <li> <p>Regular User:    -Can view the inventory    -Can add/remove items from shelves    -Can filter and search for items</p> </li> </ol>"},{"location":"maintenance/","title":"Maintenance","text":""},{"location":"maintenance/#test-qr-code-functionality","title":"Test QR Code Functionality","text":"<p>The application generates QR codes for each shelf that can be scanned with mobile devices to quickly access shelf information. For this to work correctly:</p> <ol> <li> <p>Test the QR codes by:    -Navigating to a shelf detail page (eg. <code>/warehouse/shelves/1</code>)    -Scanning the QR code with a mobile device    -Confirming it connects to the correct shelf page</p> </li> <li> <p>If the code scanning does not work or if QR codes show \"localhost\" URLs (which won't work on mobile devices), you need to set the <code>NETWORK_HOST</code> environment variable to your server's IP address or domain name, by running <code>./scripts/set_network_ip.sh</code>. You can check if it got correctly set in the <code>.env</code> file. You should see: <code>NETWORK_HOST=your-server-ip-or-hostname</code></p> </li> </ol>"},{"location":"maintenance/#app-translations","title":"App translations","text":"<p>Translations are automatically generated and come bundled in this git repo. This document is only applicable if you need to regenerate them yourself after changing something in the code.</p> <p>You need to have gettext installed (https://www.drupal.org/docs/8/modules/potion/how-to-install-setup-gettext).</p> <p>Then, run the following commands.</p> <pre><code>uv run python manage.py makemessages -l en -l pl\nuv run python manage.py compilemessages -l en -l pl\n</code></pre>"},{"location":"maintenance/#updating-the-application","title":"Updating the Application","text":"<pre><code>git pull\ndocker compose down\ndocker compose up -d --build\n</code></pre>"},{"location":"maintenance/#backing-up-the-database","title":"Backing Up the Database","text":"<p>Consider regular database backups for production deployments.</p> <pre><code>docker compose exec db pg_dump -U kspuser ksp &gt; backup_$(date +%Y%m%d).sql\n</code></pre>"},{"location":"maintenance/#viewing-logs","title":"Viewing Logs","text":"<pre><code># Web application logs\ndocker compose logs web\n\n# Nginx logs\ndocker compose logs nginx\n\n# Database logs\ndocker compose logs db\n</code></pre>"},{"location":"maintenance/#database-data-model","title":"Database Data Model","text":"<pre><code>erDiagram\n    user {\n        id int\n        username string\n        email string\n        password string\n        is_superuser Boolean\n    }\n    item_shelf_assignment {\n        id int\n        item_id int\n        shelf_id int\n        added_by int\n        removed_by int\n        add_date date\n        remove_date date\n    }\n    item {\n        id int\n        name string\n        category_id int\n        manufacturer string\n        expiration_date date\n        note string\n        is_gifted Boolean\n    }\n    category {\n        id int\n        name string\n    }\n    shelf {\n        id int\n        number int\n        rack_id int\n    }\n    rack {\n        id int\n        name char\n        room_id int\n    }\n    room {\n        id int\n        name string\n        warehouse_id int\n    }\n\n    user ||--o{ item_shelf_assignment: \"1:*\"\n    item_shelf_assignment }o--|| item : \"*:1\"\n    item }o--|| category : \"*:1\"\n    item_shelf_assignment }o--|| shelf : \"*:1\"\n    shelf }o--|| rack : \"*:1\"\n    rack }o--|| room : \"*:1\"\n</code></pre>"},{"location":"user_guide/","title":"User Guide","text":""},{"location":"user_guide/#create-your-user","title":"Create your user","text":""},{"location":"user_guide/#reset-your-password","title":"Reset your password","text":""},{"location":"user_guide/#manage-item-categories-admin-only","title":"Manage item categories (admin only)","text":""},{"location":"user_guide/#manage-warehouse-rooms-admin-only","title":"Manage warehouse rooms (admin only)","text":""},{"location":"user_guide/#manage-warehouse-racks-admin-only","title":"Manage warehouse racks (admin only)","text":""},{"location":"user_guide/#manage-warehouse-shelves-admin-only","title":"Manage warehouse shelves (admin only)","text":""},{"location":"user_guide/#create-shelf-qr-codes-admin-only","title":"Create shelf QR codes (admin only)","text":""},{"location":"user_guide/#add-an-item-to-a-shelf","title":"Add an item to a shelf","text":""},{"location":"user_guide/#take-an-item-from-a-shelf","title":"Take an item from a shelf","text":""},{"location":"user_guide/#move-an-item-to-another-shelf","title":"Move an item to another shelf","text":""},{"location":"user_guide/#show-all-items","title":"Show all items","text":""},{"location":"user_guide/#show-expired-or-nearly-expired-items","title":"Show expired or nearly expired items","text":""},{"location":"user_guide/#combine-the-filters","title":"Combine the filters","text":""},{"location":"user_guide/#view-low-stock-categories","title":"View low stock categories","text":""},{"location":"user_guide/#export-inventory-to-excel-admin-only","title":"Export inventory to excel (admin only)","text":""}]}